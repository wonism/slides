function middleware(store) { // Most of case, you don't need store
  return function wrapDispatchToAddMiddleware(next) {
    return function dispatchAndDoSomething(action) {
      console.group(action.type); console.info('dispatching', action);

      const isHookable = !action.type.match(/^PRE_/);
      // (If you call store.dispatch in middleware instead of next,
      // The action will travel the whole middleware chain again.)
      if (isHookable) store.dispatch({ type: `PRE_${action.type}` });

      const result = next(action);

      // Will get state via calling store.getState
      const state = store.getState();
      console.log('next state', state); console.groupEnd();

      return result;
    };
  };
}
